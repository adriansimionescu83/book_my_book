c
@pagy
next
@books.count
next
user_signed_in?
current_user.id
@books.count
@books
next
c
params
c
params
c
params
params[:query]
c
next
c
next
c
exit
c
message.user
current_user
message
c
user
    receiving_user = user == chat.book_owner ? chat.book_buyer : chat.book_owner
chat.book_owner
chat_users = User.where(id: [2, 1])
chat_users = Users.where(id: [2, 1])
user
self
chat.book_owner_id
chat
self.chat
c
current_user
message
c
current_user
message
exit
c
message
c
message
current_user
c
current_user
message
c
current_user
User.find(2)
message
c
helpers.current_user
helpers
exit
c
cc
c
current_user
exit
c
params
current_user
c
      other_user = user == chat.book_owner ? chat.buyer : chat.book_owner    
chat.buyer
chat.book_owner
chat
chat.owner
chat.user
chat
user
exit
user == chat.book_owner
user = User.find(6)
user = User.last
chat.book_owner
chat
c
    @chats = policy_scope(Chat)
c
Chat.first
Chat
c
Chat.all
c
@user.initials
@user
c
next
current_user
@message
next
@chat
next
c
@chat
next
c
Chat.find_or_create_by(book_owner: book_owner, buyer: buyer)
next
current_user
book_owner
next
